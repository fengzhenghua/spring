    apply plugin: 'java'
	apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
	
    [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'
	ext {
		springVersion = "4.0.5.RELEASE"
		hibernateVersion = "3.6.10.Final"
		snapshotsUrl= "http://123.147.223.93:8081/nexus/content/repositories/UCDevelop/"
	}    

    repositories {
		mavenLocal()
        maven{ url "http://123.147.223.93:8081/nexus/content/groups/public/"  }
        maven{ url "${snapshotsUrl}"  }
        maven{ url "http://maven.oschina.net/content/groups/public"  }
    }
    
	eclipse {
	    classpath {
	       downloadSources=false
	    }
	}

	dependencies {
	
		compile 'com.tydic.open:open-rest-sdk:1.0'
		compile 'org.jsoup:jsoup:1.10.2'
		compile 'com.tydic.uoc:juniversalchardet:1.0.3'
		compile 'com.tydic.uoc:selenium-server-standalone:2.42.2'
		compile ("org.springframework:spring-core:${springVersion}")
		compile ("org.springframework:spring-context:${springVersion}")
		compile ('com.alibaba:dubbo:2.4.10') {
			exclude group: 'org.springframework', module: 'spring'
		}			
		compile 'com.101tec:zkclient:0.4'
		compile 'org.apache.zookeeper:zookeeper:3.4.6'
		compile "org.springframework:spring-webmvc:${springVersion}"
		compile 'javax.servlet:javax.servlet-api:3.0.1'
		compile ('com.tydic.uda:uda:1.3.0.9.1') {
			exclude group: 'org.springframework', module: 'spring'
		}	
		compile 'com.tydic.vds:vds-core:2.2.7.1'
		compile 'com.tydic.vds:vds-sql:2.2.7.1'
		compile 'com.tydic.vds:vds-spring:2.2.7.1'
		compile 'com.tydic.vds:vds-log:2.2.7.1'
		compile 'com.tydic.vds:vds-mas:2.2.7.1'
		compile 'com.tydic.vds:vds-mdb:2.2.7.1'
		compile 'com.tydic.vds:vds-vt:2.2.7.1'
		compile 'com.oracle:ojdbc6:11.2.0.2.0'
		compile 'com.tydic.unicom:util:1.0-SNAPSHOT'		
		compile 'com.tydic.unicom:vdsBaseService:1.0-SNAPSHOT'
		compile 'com.tydic.unicom:webUtil:1.0-SNAPSHOT' 		
		compile ("org.springframework:spring-orm:${springVersion}")
		compile ("org.hibernate:hibernate-core:${hibernateVersion}")
		compile ("sun-javamail:mail:1.4")
		compile ('commons-httpclient:commons-httpclient:3.1')
		compile ('commons-codec:commons-codec:1.9')
		compile ("net.sf.json-lib:json-lib:2.3:jdk15@jar")
		compile ('org.apache.httpcomponents:httpcore:4.3.2')
		compile ('org.apache.httpcomponents:httpclient:4.3.2')
		compile 'commons-collections:commons-collections:3.2.1'
		compile 'net.sf.ezmorph:ezmorph:1.0.6'
		compile 'commons-beanutils:commons-beanutils:1.8.0'
		
		
		compile ('org.apache.axis2:axis2:1.6.2')
		compile ('org.apache.axis2:axis2-transport-local:1.6.2')
		compile ('org.apache.axis2:axis2-transport-http:1.6.2')
		compile ('org.apache.ws.commons.axiom:axiom-api:1.2.14')
		compile ('org.apache.ws.commons.axiom:axiom-impl:1.2.14')
		compile ('org.apache.ws.commons.schema:XmlSchema:1.4.7')
	} 
	group = 'com.tydic.unicom'
	ext {
	    crawlerServiceApiAppName= 'crawlerServiceApi'
	    crawlerServiceAppName= 'crawlerService'
	    appVersion= '1.0-SNAPSHOT'
	    builtBy="gradle 1.9"	
	}
	

    task copyLib(type: Copy) {
	        from configurations.runtime
	        destinationDir file("dubboDeploy/lib")        
	        from ("$buildDir/libs/${crawlerServiceAppName}-${appVersion}.jar")
	        destinationDir file("dubboDeploy/lib")  	        
	}    
	
    task cleanLib(type: Delete) {
	    Set<File> fileSet = fileTree("dubboDeploy/lib").getFiles();
	    for(File file:fileSet){
			delete file
	    }    
	} 	
	
	copyLib.dependsOn cleanLib,jar


    task crawlerServiceApiJar(type:Jar){
        version "${appVersion}"
        from sourceSets.main.output
		include 'com/tydic/unicom/crawler/business/interfaces/**'
		include 'com/tydic/unicom/crawler/business/vo/**'
		include 'com/tydic/unicom/crawler/common/BaseVoPo*'
        manifest {
            attributes 'packageName': "${crawlerServiceApiAppName}", 'Built-By': builtBy,'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }
      
    
    task crawlerServiceJar(type:Jar){
        version "${appVersion}"
        from sourceSets.main.output
        include '**'
        exclude 'applicationContext.xml'
		
        manifest {
            attributes 'packageName': "${crawlerServiceAppName}", 'Built-By': builtBy,'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }       
	
    artifacts { archives crawlerServiceApiJar,crawlerServiceJar}
    
	jar {
	    version "${appVersion}"
	    baseName "${crawlerServiceAppName}"
        include '**'
        exclude 'applicationContext.xml'
	    manifest {
	        attributes 'packageName': "${crawlerServiceAppName}", 'Built-By': 'gradle1.9','Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
	    }
	    
	}
    
    publishing {
        publications {
			crawlerService(MavenPublication) {
			    groupId group
			    artifactId "${crawlerServiceAppName}"
			    version "${appVersion}"     
			    artifact  crawlerServiceJar
			}          
            crawlerServiceApi(MavenPublication) {
                groupId group
                artifactId "${crawlerServiceApiAppName}"
                version "${appVersion}"
                artifact  crawlerServiceApiJar
            }
        }
        repositories {
            maven {
                url  "${snapshotsUrl}"
                credentials {
                    username = "admin"
                    password = "admin123"
                }
            }
        } 
    }
    

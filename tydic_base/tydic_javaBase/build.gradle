apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


dependencies { 
    compile ('org.aspectj:aspectjrt:1.7.4')
    compile "com.alibaba:fastjson:1.2.20"
    compile ('junit:junit:4.11')
    compile "org.apache.poi:poi:3.10.1"
    compile "org.apache.poi:poi-ooxml:3.10.1"
    compile "org.mockito:mockito-core:1.9.5"
    compile ("org.springframework:spring-test:${springVersion}")
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile 'javax.servlet:javax.servlet-api:3.0.1'
	compile 'javax.servlet:jsp-api:2.0'
	compile "net.sf.json-lib:json-lib:2.3:jdk15@jar"
	compile 'commons-fileupload:commons-fileupload:1.2.1'
	compile 'commons-collections:commons-collections:3.2.1'
	compile 'net.sf.ezmorph:ezmorph:1.0.6'
	compile 'commons-beanutils:commons-beanutils:1.8.0'
	compile ('com.tydic.uda:uda:1.3.0.9.1') {
		exclude group: 'org.springframework', module: 'spring'
	}	
	compile 'com.tydic.vds:vds-core:2.2.7.1'
	compile 'com.tydic.vds:vds-sql:2.2.7.1'
	compile 'com.tydic.vds:vds-spring:2.2.7.1'
	compile 'com.tydic.vds:vds-log:2.2.7.1'
	compile 'com.tydic.vds:vds-mas:2.2.7.1'
	compile 'com.tydic.vds:vds-mdb:2.2.7.1'
	compile 'com.tydic.vds:vds-vt:2.2.7.1'
	compile 'mysql:mysql-connector-java:5.1.24'
	
	compile 'org.jbpm.jbpm4:jbpm-api:4.4' 
	compile ('org.jbpm.jbpm4:jbpm-bpmn:4.4' ) {
		exclude group: 'org.slf4j', module: 'slf4j-api'
		exclude group: 'org.slf4j', module: 'slf4j-jdk14'
	}		
	compile ('org.jbpm.jbpm4:jbpm-log:4.4')
	compile ('org.jbpm.jbpm4:jbpm-db:4.4') {
		exclude group: 'hsqldb', module: 'hsqldb'
		exclude group: 'mysql', module: 'mysql-connector-java'
		exclude group: 'postgresql', module: 'postgresql'
		exclude group: 'org.slf4j', module: 'slf4j-api'
		exclude group: 'org.slf4j', module: 'slf4j-jdk14'
	}
	compile ("org.springframework:spring-orm:${springVersion}")
	compile ("org.hibernate:hibernate-core:${hibernateVersion}")
	compile ("sun-javamail:mail:1.4")
	compile ("javax.activation:activation:1.1.1")
	compile ('org.springframework.data:spring-data-mongodb:1.5.2.RELEASE')
	
	compile ('org.apache.axis2:axis2:1.6.2')
	compile ('org.apache.ws.commons.axiom:axiom-api:1.2.14')
	compile ('org.apache.ws.commons.axiom:axiom-impl:1.2.14')
	compile ('org.apache.ws.commons.schema:XmlSchema:1.4.7')
	compile ('wsdl4j:wsdl4j:1.6.3')
	compile ('org.apache.neethi:neethi:3.0.3')
	compile ('commons-httpclient:commons-httpclient:3.1')
	compile ('commons-codec:commons-codec:1.9')
	
	compile ('org.apache.httpcomponents:httpcore:4.3.2')
	compile ('org.apache.httpcomponents:httpclient:4.3.2')
} 

    group = 'com.tydic.unicom'
    ext {
	    cacheApiAppName= 'cacheApi'
	    cacheServiceAppName= 'cacheService'
		mongodbServiceAppName='mongodbService'
	    utilAppName= 'util'
	    workFlowApiAppName= 'workFlowApi'
	    workFlowServiceAppName= 'workFlowService'
	    sequenceApiAppName= 'sequenceApi'
	    sequenceServiceAppName= 'sequenceService'	    
	    vdsBaseServiceAppName= 'vdsBaseService'
	    webUtilAppName= 'webUtil'
	    exceptionAppName= 'exception'
	    tagAppName= 'tag'
	    ecaopAppName= 'ecaop'
	    appVersion= '1.0-SNAPSHOT'
	    builtBy="gradle 1.9"			    
    }


    task cacheApiJar(type:Jar){
        version "${appVersion}"
        baseName "${cacheApiAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/cache/service/interfaces/**'
		include 'com/tydic/unicom/service/cache/service/redis/interfaces/**'
		include 'com/tydic/unicom/service/cache/po/**'
		include 'com/tydic/unicom/service/cache/service/redis/po/**'
        manifest {
            attributes 'packageName': "${cacheApiAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }
    
    
    task cacheServiceJar(type:Jar){
        version "${appVersion}"
        baseName "${cacheServiceAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/cache/**'
		include 'config/uda/uocRedisDataService.xml'
		include 'config/uda/apcRedisDataService.xml'
		include 'config/uda/ugcRedisDataService.xml'
        include 'config/uda/cacheDataService.xml'
        manifest {
            attributes 'packageName': "${cacheServiceAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }    
	
	task mongodbServiceJar(type:Jar){
		 version "${appVersion}"
		 baseName "${mongodbServiceAppName}"
		 from sourceSets.main.output
		 include 'com/tydic/unicom/service/mongodb/**'
		 include 'META-INF/spring/spring-mongodb.xml'
		 manifest {
            attributes 'packageName': "${mongodbServiceAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
	}
    
    task utilJar(type:Jar){
        version "${appVersion}"
        baseName "${utilAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/util/**'
        manifest {
            attributes 'packageName': "${utilAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }
    
    task workFlowApiJar(type:Jar){
        version "${appVersion}"
        baseName "${workFlowApiAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/workFlow/service/interfaces/**'
		include 'com/tydic/unicom/service/workFlow/po/**'
        manifest {
            attributes 'packageName': "${workFlowApiAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
    
    task workFlowServiceJar(type:Jar){
        version "${appVersion}"
        baseName "${workFlowServiceAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/workFlow/**'
        include 'config/jbpm/**'
        include 'config/jpdl/**'
        include 'config/uda/workFlowDataService.xml'
        manifest {
            attributes 'packageName': "${workFlowServiceAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }
    
    task sequenceApiJar(type:Jar){
        version "${appVersion}"
        baseName "${sequenceApiAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/sequence/service/interfaces/**'
		include 'com/tydic/unicom/service/sequence/po/**'
        manifest {
            attributes 'packageName': "${sequenceApiAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
    
    task sequenceServiceJar(type:Jar){
        version "${appVersion}"
        baseName "${sequenceServiceAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/sequence/**'
        include 'config/uda/sequenceDataService.xml'
        manifest {
            attributes 'packageName': "${sequenceServiceAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }    
    
    task vdsBaseServiceJar(type:Jar){
        version "${appVersion}"
        baseName "${vdsBaseServiceAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/vdsBase/**'
        include 'config/uda/countDataService.xml'
        manifest {
            attributes 'packageName': "${vdsBaseServiceAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
     }
     task webUtilJar(type:Jar){
        version "${appVersion}"
        baseName "${webUtilAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/webUtil/**'
        include 'com/tydic/unicom/aspect/**'
        include 'com/tydic/unicom/test/spring/**'
		include 'com/tydic/unicom/security/**'
		include 'com/tydic/unicom/policy/**'
		include 'com/tydic/unicom/sms/**'
		include 'config/uda/CrawlerActivemqDataService.xml'
        manifest {
            attributes 'packageName': "${webUtilAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
    task exceptionJar(type:Jar){
        version "${appVersion}"
        baseName "${exceptionAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/exception/**'
        include 'config/exception/businessException.xml'
        manifest {
            attributes 'packageName': "${exceptionAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
     task ecaopJar(type:Jar){
        version "${appVersion}"
        baseName "${ecaopAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/service/ecaop/**'
        manifest {
            attributes 'packageName': "${ecaopAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
    task tagJar(type:Jar){
        version "${appVersion}"
        baseName "${tagAppName}"
        from sourceSets.main.output
        include 'com/tydic/unicom/tag/**'
        include 'META-INF/tydic.tld'
        manifest {
            attributes 'packageName': "${tagAppName}", 'Built-By': "${builtBy}",'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
        }
    }  
    
    
    
    artifacts { archives cacheApiJar}
    artifacts { archives cacheServiceJar}
	artifacts { archives mongodbServiceJar}
    artifacts { archives utilJar}
    artifacts { archives workFlowApiJar}
    artifacts { archives workFlowServiceJar}
    artifacts { archives sequenceApiJar}
    artifacts { archives sequenceServiceJar}    
    artifacts { archives vdsBaseServiceJar}
    artifacts { archives webUtilJar}
    artifacts { archives exceptionJar}
    artifacts { archives tagJar}
    artifacts { archives ecaopJar}
    
    publishing {
        publications {
                cacheApi(MavenPublication) {
                    groupId group
                    artifactId "${cacheApiAppName}"
                    version "${appVersion}"
                    artifact  cacheApiJar
                }
                cacheService(MavenPublication) {
                    groupId group
                    artifactId "${cacheServiceAppName}"
                    version "${appVersion}"
                    artifact  cacheServiceJar
                }
				mongodbService(MavenPublication){
					groupId group
                    artifactId "${mongodbServiceAppName}"
                    version "${appVersion}"
                    artifact  mongodbServiceJar
				}
                util(MavenPublication) {
                    groupId group
                    artifactId "${utilAppName}"
                    version "${appVersion}"
                    artifact  utilJar
                }       
                workFlowApi(MavenPublication) {
                    groupId group
                    artifactId "${workFlowApiAppName}"
                    version "${appVersion}"
                    artifact  workFlowApiJar
                }
                workFlowService(MavenPublication) {
                    groupId group
                    artifactId "${workFlowServiceAppName}"
                    version "${appVersion}"
                    artifact  workFlowServiceJar
                } 
                sequenceApi(MavenPublication) {
                    groupId group
                    artifactId "${sequenceApiAppName}"
                    version "${appVersion}"
                    artifact  sequenceApiJar
                }
                sequenceService(MavenPublication) {
                    groupId group
                    artifactId "${sequenceServiceAppName}"
                    version "${appVersion}"
                    artifact  sequenceServiceJar
                }                
                vdsBaseService(MavenPublication) {
                    groupId group
                    artifactId "${vdsBaseServiceAppName}"
                    version "${appVersion}"
                    artifact  vdsBaseServiceJar
                }
                webUtil(MavenPublication) {
                    groupId group
                    artifactId "${webUtilAppName}"
                    version "${appVersion}"
                    artifact  webUtilJar
                }   
                exception(MavenPublication) {
                    groupId group
                    artifactId "${exceptionAppName}"
                    version "${appVersion}"
                    artifact  exceptionJar
                }   
                ecaop(MavenPublication) {
                    groupId group
                    artifactId "${ecaopAppName}"
                    version "${appVersion}"
                    artifact  ecaopJar
                }  
                tag(MavenPublication) {
                    groupId group
                    artifactId "${tagAppName}"
                    version "${appVersion}"
                    artifact  tagJar
                }   
        }
    }